type Query {
  guests(filter: guests_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [guests!]!
  guests_by_id(id: ID!, version: String): guests
  guests_aggregated(groupBy: [String], filter: guests_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [guests_aggregated!]!
  guests_by_version(version: String!, id: ID!): version_guests
  speakers(filter: speakers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [speakers!]!
  speakers_by_id(id: ID!, version: String): speakers
  speakers_aggregated(groupBy: [String], filter: speakers_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [speakers_aggregated!]!
  speakers_by_version(version: String!, id: ID!): version_speakers
  programs(filter: programs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [programs!]!
  programs_by_id(id: ID!, version: String): programs
  programs_aggregated(groupBy: [String], filter: programs_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [programs_aggregated!]!
  programs_by_version(version: String!, id: ID!): version_programs
  events_sections(filter: events_sections_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [events_sections!]!
  events_sections_by_id(id: ID!, version: String): events_sections
  events_sections_aggregated(groupBy: [String], filter: events_sections_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [events_sections_aggregated!]!
  events_sections_by_version(version: String!, id: ID!): version_events_sections
  events_programs(filter: events_programs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [events_programs!]!
  events_programs_by_id(id: ID!, version: String): events_programs
  events_programs_aggregated(groupBy: [String], filter: events_programs_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [events_programs_aggregated!]!
  events_programs_by_version(version: String!, id: ID!): version_events_programs
  icons(filter: icons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [icons!]!
  icons_by_id(id: ID!, version: String): icons
  icons_aggregated(groupBy: [String], filter: icons_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [icons_aggregated!]!
  icons_by_version(version: String!, id: ID!): version_icons
  guests_directus_files(filter: guests_directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [guests_directus_files!]!
  guests_directus_files_by_id(id: ID!, version: String): guests_directus_files
  guests_directus_files_aggregated(groupBy: [String], filter: guests_directus_files_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [guests_directus_files_aggregated!]!
  guests_directus_files_by_version(version: String!, id: ID!): version_guests_directus_files
  events_guests(filter: events_guests_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [events_guests!]!
  events_guests_by_id(id: ID!, version: String): events_guests
  events_guests_aggregated(groupBy: [String], filter: events_guests_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [events_guests_aggregated!]!
  events_guests_by_version(version: String!, id: ID!): version_events_guests
  rsvp(filter: rsvp_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [rsvp!]!
  rsvp_by_id(id: ID!, version: String): rsvp
  rsvp_aggregated(groupBy: [String], filter: rsvp_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [rsvp_aggregated!]!
  rsvp_by_version(version: String!, id: ID!): version_rsvp
  events(filter: events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [events!]!
  events_by_id(id: ID!, version: String): events
  events_aggregated(groupBy: [String], filter: events_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [events_aggregated!]!
  events_by_version(version: String!, id: ID!): version_events
  directus_sync_id_map(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_sync_id_map!]!
  directus_sync_id_map_by_id(id: ID!, version: String): directus_sync_id_map
  directus_sync_id_map_aggregated(groupBy: [String], filter: directus_sync_id_map_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_sync_id_map_aggregated!]!
  directus_sync_id_map_by_version(version: String!, id: ID!): version_directus_sync_id_map
  sections(filter: sections_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [sections!]!
  sections_by_id(id: ID!, version: String): sections
  sections_aggregated(groupBy: [String], filter: sections_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [sections_aggregated!]!
  sections_by_version(version: String!, id: ID!): version_sections
}

type Mutation {
  create_guests_items(filter: guests_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_guests_input!]): [guests!]!
  create_guests_item(data: create_guests_input!): guests
  create_speakers_items(filter: speakers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_speakers_input!]): [speakers!]!
  create_speakers_item(data: create_speakers_input!): speakers
  create_programs_items(filter: programs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_programs_input!]): [programs!]!
  create_programs_item(data: create_programs_input!): programs
  create_events_sections_items(filter: events_sections_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_events_sections_input!]): [events_sections!]!
  create_events_sections_item(data: create_events_sections_input!): events_sections
  create_events_programs_items(filter: events_programs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_events_programs_input!]): [events_programs!]!
  create_events_programs_item(data: create_events_programs_input!): events_programs
  create_icons_items(filter: icons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_icons_input!]): [icons!]!
  create_icons_item(data: create_icons_input!): icons
  create_guests_directus_files_items(filter: guests_directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_guests_directus_files_input!]): [guests_directus_files!]!
  create_guests_directus_files_item(data: create_guests_directus_files_input!): guests_directus_files
  create_events_guests_items(filter: events_guests_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_events_guests_input!]): [events_guests!]!
  create_events_guests_item(data: create_events_guests_input!): events_guests
  create_rsvp_items(filter: rsvp_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_rsvp_input!]): [rsvp!]!
  create_rsvp_item(data: create_rsvp_input!): rsvp
  create_events_items(filter: events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_events_input!]): [events!]!
  create_events_item(data: create_events_input!): events
  create_directus_sync_id_map_items(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_sync_id_map_input!]): [directus_sync_id_map!]!
  create_directus_sync_id_map_item(data: create_directus_sync_id_map_input!): directus_sync_id_map
  create_sections_items(filter: sections_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_sections_input!]): [sections!]!
  create_sections_item(data: create_sections_input!): sections
  update_guests_items(filter: guests_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_guests_input!): [guests!]!
  update_guests_batch(filter: guests_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_guests_input!]): [guests!]!
  update_guests_item(id: ID!, data: update_guests_input!): guests
  update_speakers_items(filter: speakers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_speakers_input!): [speakers!]!
  update_speakers_batch(filter: speakers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_speakers_input!]): [speakers!]!
  update_speakers_item(id: ID!, data: update_speakers_input!): speakers
  update_programs_items(filter: programs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_programs_input!): [programs!]!
  update_programs_batch(filter: programs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_programs_input!]): [programs!]!
  update_programs_item(id: ID!, data: update_programs_input!): programs
  update_events_sections_items(filter: events_sections_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_events_sections_input!): [events_sections!]!
  update_events_sections_batch(filter: events_sections_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_events_sections_input!]): [events_sections!]!
  update_events_sections_item(id: ID!, data: update_events_sections_input!): events_sections
  update_events_programs_items(filter: events_programs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_events_programs_input!): [events_programs!]!
  update_events_programs_batch(filter: events_programs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_events_programs_input!]): [events_programs!]!
  update_events_programs_item(id: ID!, data: update_events_programs_input!): events_programs
  update_icons_items(filter: icons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_icons_input!): [icons!]!
  update_icons_batch(filter: icons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_icons_input!]): [icons!]!
  update_icons_item(id: ID!, data: update_icons_input!): icons
  update_guests_directus_files_items(filter: guests_directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_guests_directus_files_input!): [guests_directus_files!]!
  update_guests_directus_files_batch(filter: guests_directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_guests_directus_files_input!]): [guests_directus_files!]!
  update_guests_directus_files_item(id: ID!, data: update_guests_directus_files_input!): guests_directus_files
  update_events_guests_items(filter: events_guests_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_events_guests_input!): [events_guests!]!
  update_events_guests_batch(filter: events_guests_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_events_guests_input!]): [events_guests!]!
  update_events_guests_item(id: ID!, data: update_events_guests_input!): events_guests
  update_rsvp_items(filter: rsvp_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_rsvp_input!): [rsvp!]!
  update_rsvp_batch(filter: rsvp_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_rsvp_input!]): [rsvp!]!
  update_rsvp_item(id: ID!, data: update_rsvp_input!): rsvp
  update_events_items(filter: events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_events_input!): [events!]!
  update_events_batch(filter: events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_events_input!]): [events!]!
  update_events_item(id: ID!, data: update_events_input!): events
  update_directus_sync_id_map_items(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_sync_id_map_input!): [directus_sync_id_map!]!
  update_directus_sync_id_map_batch(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_sync_id_map_input!]): [directus_sync_id_map!]!
  update_directus_sync_id_map_item(id: ID!, data: update_directus_sync_id_map_input!): directus_sync_id_map
  update_sections_items(filter: sections_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_sections_input!): [sections!]!
  update_sections_batch(filter: sections_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_sections_input!]): [sections!]!
  update_sections_item(id: ID!, data: update_sections_input!): sections
  delete_guests_items(ids: [ID]!): delete_many
  delete_guests_item(id: ID!): delete_one
  delete_speakers_items(ids: [ID]!): delete_many
  delete_speakers_item(id: ID!): delete_one
  delete_programs_items(ids: [ID]!): delete_many
  delete_programs_item(id: ID!): delete_one
  delete_events_sections_items(ids: [ID]!): delete_many
  delete_events_sections_item(id: ID!): delete_one
  delete_events_programs_items(ids: [ID]!): delete_many
  delete_events_programs_item(id: ID!): delete_one
  delete_icons_items(ids: [ID]!): delete_many
  delete_icons_item(id: ID!): delete_one
  delete_guests_directus_files_items(ids: [ID]!): delete_many
  delete_guests_directus_files_item(id: ID!): delete_one
  delete_events_guests_items(ids: [ID]!): delete_many
  delete_events_guests_item(id: ID!): delete_one
  delete_rsvp_items(ids: [ID]!): delete_many
  delete_rsvp_item(id: ID!): delete_one
  delete_events_items(ids: [ID]!): delete_many
  delete_events_item(id: ID!): delete_one
  delete_directus_sync_id_map_items(ids: [ID]!): delete_many
  delete_directus_sync_id_map_item(id: ID!): delete_one
  delete_sections_items(ids: [ID]!): delete_many
  delete_sections_item(id: ID!): delete_one
}

type Subscription {
  directus_roles_mutated(event: EventEnum): directus_roles_mutated
  directus_presets_mutated(event: EventEnum): directus_presets_mutated
  directus_revisions_mutated(event: EventEnum): directus_revisions_mutated
  directus_folders_mutated(event: EventEnum): directus_folders_mutated
  directus_files_mutated(event: EventEnum): directus_files_mutated
  directus_permissions_mutated(event: EventEnum): directus_permissions_mutated
  directus_activity_mutated(event: EventEnum): directus_activity_mutated
  directus_users_mutated(event: EventEnum): directus_users_mutated
  directus_webhooks_mutated(event: EventEnum): directus_webhooks_mutated
  directus_panels_mutated(event: EventEnum): directus_panels_mutated
  directus_notifications_mutated(event: EventEnum): directus_notifications_mutated
  directus_shares_mutated(event: EventEnum): directus_shares_mutated
  directus_flows_mutated(event: EventEnum): directus_flows_mutated
  directus_dashboards_mutated(event: EventEnum): directus_dashboards_mutated
  directus_operations_mutated(event: EventEnum): directus_operations_mutated
  directus_translations_mutated(event: EventEnum): directus_translations_mutated
  guests_mutated(event: EventEnum): guests_mutated
  directus_policies_mutated(event: EventEnum): directus_policies_mutated
  directus_access_mutated(event: EventEnum): directus_access_mutated
  directus_comments_mutated(event: EventEnum): directus_comments_mutated
  directus_versions_mutated(event: EventEnum): directus_versions_mutated
  directus_settings_mutated(event: EventEnum): directus_settings_mutated
  speakers_mutated(event: EventEnum): speakers_mutated
  programs_mutated(event: EventEnum): programs_mutated
  events_sections_mutated(event: EventEnum): events_sections_mutated
  events_programs_mutated(event: EventEnum): events_programs_mutated
  icons_mutated(event: EventEnum): icons_mutated
  guests_directus_files_mutated(event: EventEnum): guests_directus_files_mutated
  events_guests_mutated(event: EventEnum): events_guests_mutated
  rsvp_mutated(event: EventEnum): rsvp_mutated
  events_mutated(event: EventEnum): events_mutated
  directus_sync_id_map_mutated(event: EventEnum): directus_sync_id_map_mutated
  sections_mutated(event: EventEnum): sections_mutated
}

"""The `Boolean` scalar type represents `true` or `false`."""
scalar Boolean

"""ISO8601 Date values"""
scalar Date

"""
The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
"""
scalar Float

"""BigInt value"""
scalar GraphQLBigInt

"""A Float or a String"""
scalar GraphQLStringOrFloat

"""Hashed string values"""
scalar Hash

"""
The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.
"""
scalar ID

"""
The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
"""
scalar Int

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
"""
scalar String

enum EventEnum {
  create
  update
  delete
}

type count_functions {
  count: Int
}

type date_functions {
  year: Int
  month: Int
  week: Int
  day: Int
  weekday: Int
}

type datetime_functions {
  year: Int
  month: Int
  week: Int
  day: Int
  weekday: Int
  hour: Int
  minute: Int
  second: Int
}

type delete_many {
  ids: [ID]!
}

type delete_one {
  id: ID!
}

type directus_access {
  id: ID!
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  policy(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_policies
  sort: Int
}

type directus_access_mutated {
  key: ID!
  event: EventEnum
  data: directus_access
}

type directus_activity {
  id: ID!
  action: String!
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  timestamp: Date
  timestamp_func: datetime_functions
  ip: String
  user_agent: String
  collection: String!
  item: String!
  origin: String
  revisions(filter: directus_revisions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_revisions]
  revisions_func: count_functions
}

type directus_activity_mutated {
  key: ID!
  event: EventEnum
  data: directus_activity
}

type directus_comments {
  id: ID!
  collection: String!
  item: String!
  comment: String!
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_comments_mutated {
  key: ID!
  event: EventEnum
  data: directus_comments
}

type directus_dashboards {
  id: ID!
  name: String!
  icon: String
  note: String
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  color: String
  panels(filter: directus_panels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_panels]
  panels_func: count_functions
}

type directus_dashboards_mutated {
  key: ID!
  event: EventEnum
  data: directus_dashboards
}

type directus_files {
  id: ID!
  storage: String!
  filename_disk: String
  filename_download: String!
  title: String
  type: String
  folder(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
  uploaded_by(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  created_on: Date
  created_on_func: datetime_functions
  modified_by(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  modified_on: Date
  modified_on_func: datetime_functions
  charset: String
  filesize: GraphQLBigInt
  width: Int
  height: Int
  duration: Int
  embed: String
  description: String
  location: String
  tags: JSON
  tags_func: count_functions
  metadata: JSON
  metadata_func: count_functions
  focal_point_x: Int
  focal_point_y: Int
  tus_id: String
  tus_data: JSON
  tus_data_func: count_functions
  uploaded_on: Date
  uploaded_on_func: datetime_functions
}

type directus_files_mutated {
  key: ID!
  event: EventEnum
  data: directus_files
}

type directus_flows {
  id: ID!
  name: String!
  icon: String
  color: String
  description: String
  status: String
  trigger: String
  accountability: String
  options: JSON
  options_func: count_functions
  operation(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  operations(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_operations]
  operations_func: count_functions
}

type directus_flows_mutated {
  key: ID!
  event: EventEnum
  data: directus_flows
}

type directus_folders {
  id: ID!
  name: String!
  parent(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
}

type directus_folders_mutated {
  key: ID!
  event: EventEnum
  data: directus_folders
}

type directus_notifications {
  id: ID!
  timestamp: Date
  timestamp_func: datetime_functions
  status: String
  recipient(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  sender(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  subject: String!
  message: String
  collection: String
  item: String
}

type directus_notifications_mutated {
  key: ID!
  event: EventEnum
  data: directus_notifications
}

type directus_operations {
  id: ID!
  name: String
  key: String!
  type: String!
  position_x: Int!
  position_y: Int!
  options: JSON
  options_func: count_functions
  resolve(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  reject(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  flow(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_flows
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_operations_mutated {
  key: ID!
  event: EventEnum
  data: directus_operations
}

type directus_panels {
  id: ID!
  dashboard(filter: directus_dashboards_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_dashboards
  name: String
  icon: String
  color: String
  show_header: Boolean!
  note: String
  type: String!
  position_x: Int!
  position_y: Int!
  width: Int!
  height: Int!
  options: JSON
  options_func: count_functions
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_panels_mutated {
  key: ID!
  event: EventEnum
  data: directus_panels
}

type directus_permissions {
  id: ID
  collection: String!
  action: String!
  permissions: JSON
  permissions_func: count_functions
  validation: JSON
  validation_func: count_functions
  presets: JSON
  presets_func: count_functions
  fields: [String]
  policy(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_policies
}

type directus_permissions_mutated {
  key: ID!
  event: EventEnum
  data: directus_permissions
}

type directus_policies {
  id: ID!
  name: String!
  icon: String
  description: String
  ip_access: [String]

  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean!
  admin_access: Boolean!
  app_access: Boolean!
  permissions(filter: directus_permissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_permissions]
  permissions_func: count_functions
  users(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  users_func: count_functions
  roles(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  roles_func: count_functions
}

type directus_policies_mutated {
  key: ID!
  event: EventEnum
  data: directus_policies
}

type directus_presets {
  id: ID!
  bookmark: String
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  collection: String
  search: String
  layout: String
  layout_query: JSON
  layout_query_func: count_functions
  layout_options: JSON
  layout_options_func: count_functions
  refresh_interval: Int
  filter: JSON
  filter_func: count_functions
  icon: String
  color: String
}

type directus_presets_mutated {
  key: ID!
  event: EventEnum
  data: directus_presets
}

type directus_revisions {
  id: ID!
  activity(filter: directus_activity_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_activity
  collection: String!
  item: String!
  data: JSON
  data_func: count_functions
  delta: JSON
  delta_func: count_functions
  parent(filter: directus_revisions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_revisions
  version(filter: directus_versions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_versions
}

type directus_revisions_mutated {
  key: ID!
  event: EventEnum
  data: directus_revisions
}

type directus_roles {
  id: ID!
  name: String!
  icon: String
  description: String
  parent(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  children(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_roles]
  children_func: count_functions
  policies(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  policies_func: count_functions
  users(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_users]
  users_func: count_functions
}

type directus_roles_mutated {
  key: ID!
  event: EventEnum
  data: directus_roles
}

type directus_settings {
  id: ID!
  project_name: String
  project_url: String

  """$t:field_options.directus_settings.project_color_note"""
  project_color: String
  project_logo(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_foreground(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_background(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_note: String
  auth_login_attempts: Int
  auth_password_policy: String
  storage_asset_transform: String
  storage_asset_presets: JSON
  storage_asset_presets_func: count_functions
  custom_css: String
  storage_default_folder(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
  basemaps: JSON
  basemaps_func: count_functions
  mapbox_key: String
  module_bar: JSON
  module_bar_func: count_functions
  project_descriptor: String
  default_language: String
  custom_aspect_ratios: JSON
  custom_aspect_ratios_func: count_functions
  public_favicon(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  default_appearance: String
  default_theme_light: String
  theme_light_overrides: JSON
  theme_light_overrides_func: count_functions
  default_theme_dark: String
  theme_dark_overrides: JSON
  theme_dark_overrides_func: count_functions
  report_error_url: String
  report_bug_url: String
  report_feature_url: String

  """$t:fields.directus_settings.public_registration_note"""
  public_registration: Boolean!

  """$t:fields.directus_settings.public_registration_verify_email_note"""
  public_registration_verify_email: Boolean
  public_registration_role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles

  """$t:fields.directus_settings.public_registration_email_filter_note"""
  public_registration_email_filter: JSON
  public_registration_email_filter_func: count_functions
  visual_editor_urls: JSON
  visual_editor_urls_func: count_functions
}

type directus_settings_mutated {
  key: ID!
  event: EventEnum
  data: directus_settings
}

type directus_shares {
  id: ID!
  name: String
  collection: String!
  item: String!
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles

  """$t:shared_leave_blank_for_passwordless_access"""
  password: Hash
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_created: Date
  date_created_func: datetime_functions

  """$t:shared_leave_blank_for_unlimited"""
  date_start: Date
  date_start_func: datetime_functions

  """$t:shared_leave_blank_for_unlimited"""
  date_end: Date
  date_end_func: datetime_functions
  times_used: Int

  """$t:shared_leave_blank_for_unlimited"""
  max_uses: Int
}

type directus_shares_mutated {
  key: ID!
  event: EventEnum
  data: directus_shares
}

type directus_sync_id_map {
  id: ID!
  table: String!
  sync_id: String!
  local_id: String!
  created_at: Date
  created_at_func: datetime_functions
}

type directus_sync_id_map_aggregated {
  group: JSON
  countAll: Int
  count: directus_sync_id_map_aggregated_count
  countDistinct: directus_sync_id_map_aggregated_count
  avg: directus_sync_id_map_aggregated_fields
  sum: directus_sync_id_map_aggregated_fields
  avgDistinct: directus_sync_id_map_aggregated_fields
  sumDistinct: directus_sync_id_map_aggregated_fields
  min: directus_sync_id_map_aggregated_fields
  max: directus_sync_id_map_aggregated_fields
}

type directus_sync_id_map_aggregated_count {
  id: Int
  table: Int
  sync_id: Int
  local_id: Int
  created_at: Int
}

type directus_sync_id_map_aggregated_fields {
  id: Float
}

type directus_sync_id_map_mutated {
  key: ID!
  event: EventEnum
  data: directus_sync_id_map
}

type directus_translations {
  id: ID!
  language: String!
  key: String!
  value: String!
}

type directus_translations_mutated {
  key: ID!
  event: EventEnum
  data: directus_translations
}

type directus_users {
  id: ID!
  first_name: String
  last_name: String
  email: String
  password: Hash
  location: String
  title: String
  description: String
  tags: JSON
  tags_func: count_functions
  avatar(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  language: String
  tfa_secret: Hash
  status: String
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  token: Hash
  last_access: Date
  last_access_func: datetime_functions
  last_page: String
  provider: String
  external_identifier: String
  auth_data: JSON
  auth_data_func: count_functions
  email_notifications: Boolean
  appearance: String
  theme_dark: String
  theme_light: String
  theme_light_overrides: JSON
  theme_light_overrides_func: count_functions
  theme_dark_overrides: JSON
  theme_dark_overrides_func: count_functions
  policies(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  policies_func: count_functions
}

type directus_users_mutated {
  key: ID!
  event: EventEnum
  data: directus_users
}

type directus_versions {
  id: ID!
  key: String!
  name: String
  collection: String!
  item: String!
  hash: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  delta: JSON
  delta_func: count_functions
}

type directus_versions_mutated {
  key: ID!
  event: EventEnum
  data: directus_versions
}

type directus_webhooks {
  id: ID!
  name: String!
  method: String
  url: String!
  status: String
  data: Boolean
  actions: [String]!
  collections: [String]!
  headers: JSON
  headers_func: count_functions
  was_active_before_deprecation: Boolean!
  migrated_flow(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_flows
}

type directus_webhooks_mutated {
  key: ID!
  event: EventEnum
  data: directus_webhooks
}

type events {
  id: ID!
  status: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_updated: Date
  date_updated_func: datetime_functions
  title: String
  description: String
  location: String
  startDate: Date
  startDate_func: date_functions
  endDate: Date
  endDate_func: date_functions
  startTime: Date
  startTime_func: time_functions
  endTime: Date
  endTime_func: time_functions
  type: String
  maxAttendees: Int
  backgroundImage: String
  rsvp(filter: rsvp_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): rsvp
  pageBanner(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  sections(filter: events_sections_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [events_sections]
  sections_func: count_functions
  programs(filter: events_programs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [events_programs]
  programs_func: count_functions
  guests(filter: events_guests_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [events_guests]
  guests_func: count_functions
}

type events_aggregated {
  group: JSON
  countAll: Int
  count: events_aggregated_count
  countDistinct: events_aggregated_count
  avg: events_aggregated_fields
  sum: events_aggregated_fields
  avgDistinct: events_aggregated_fields
  sumDistinct: events_aggregated_fields
  min: events_aggregated_fields
  max: events_aggregated_fields
}

type events_aggregated_count {
  id: Int
  status: Int
  user_created: Int
  date_created: Int
  user_updated: Int
  date_updated: Int
  title: Int
  description: Int
  location: Int
  startDate: Int
  endDate: Int
  startTime: Int
  endTime: Int
  type: Int
  maxAttendees: Int
  backgroundImage: Int
  rsvp: Int
  pageBanner: Int
  sections: Int
  programs: Int
  guests: Int
}

type events_aggregated_fields {
  maxAttendees: Float
  rsvp: Float
}

type events_guests {
  id: ID!
  events_id(filter: events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): events
  guests_id(filter: guests_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): guests
}

type events_guests_aggregated {
  group: JSON
  countAll: Int
  count: events_guests_aggregated_count
  countDistinct: events_guests_aggregated_count
  avg: events_guests_aggregated_fields
  sum: events_guests_aggregated_fields
  avgDistinct: events_guests_aggregated_fields
  sumDistinct: events_guests_aggregated_fields
  min: events_guests_aggregated_fields
  max: events_guests_aggregated_fields
}

type events_guests_aggregated_count {
  id: Int
  events_id: Int
  guests_id: Int
}

type events_guests_aggregated_fields {
  id: Float
  guests_id: Float
}

type events_guests_mutated {
  key: ID!
  event: EventEnum
  data: events_guests
}

type events_mutated {
  key: ID!
  event: EventEnum
  data: events
}

type events_programs {
  id: ID!
  events_id(filter: events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): events
  programs_id(filter: programs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): programs
}

type events_programs_aggregated {
  group: JSON
  countAll: Int
  count: events_programs_aggregated_count
  countDistinct: events_programs_aggregated_count
  avg: events_programs_aggregated_fields
  sum: events_programs_aggregated_fields
  avgDistinct: events_programs_aggregated_fields
  sumDistinct: events_programs_aggregated_fields
  min: events_programs_aggregated_fields
  max: events_programs_aggregated_fields
}

type events_programs_aggregated_count {
  id: Int
  events_id: Int
  programs_id: Int
}

type events_programs_aggregated_fields {
  id: Float
}

type events_programs_mutated {
  key: ID!
  event: EventEnum
  data: events_programs
}

type events_sections {
  id: ID!
  events_id(filter: events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): events
  sections_id(filter: sections_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): sections
}

type events_sections_aggregated {
  group: JSON
  countAll: Int
  count: events_sections_aggregated_count
  countDistinct: events_sections_aggregated_count
  avg: events_sections_aggregated_fields
  sum: events_sections_aggregated_fields
  avgDistinct: events_sections_aggregated_fields
  sumDistinct: events_sections_aggregated_fields
  min: events_sections_aggregated_fields
  max: events_sections_aggregated_fields
}

type events_sections_aggregated_count {
  id: Int
  events_id: Int
  sections_id: Int
}

type events_sections_aggregated_fields {
  id: Float
  sections_id: Float
}

type events_sections_mutated {
  key: ID!
  event: EventEnum
  data: events_sections
}

type guests {
  id: ID!
  status: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_updated: Date
  date_updated_func: datetime_functions
  first_name: String
  last_name: String
  email: String
  response: String
  type: String
  phone_number: String
  dietary_requirements: String
  message: String
  token: String
  attendance_status: String
  images(filter: guests_directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [guests_directus_files]
  images_func: count_functions
}

type guests_aggregated {
  group: JSON
  countAll: Int
  count: guests_aggregated_count
  countDistinct: guests_aggregated_count
  avg: guests_aggregated_fields
  sum: guests_aggregated_fields
  avgDistinct: guests_aggregated_fields
  sumDistinct: guests_aggregated_fields
  min: guests_aggregated_fields
  max: guests_aggregated_fields
}

type guests_aggregated_count {
  id: Int
  status: Int
  user_created: Int
  date_created: Int
  user_updated: Int
  date_updated: Int
  first_name: Int
  last_name: Int
  email: Int
  response: Int
  type: Int
  phone_number: Int
  dietary_requirements: Int
  message: Int
  token: Int
  attendance_status: Int
  images: Int
}

type guests_aggregated_fields {
  id: Float
}

type guests_directus_files {
  id: ID!
  guests_id(filter: guests_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): guests
  directus_files_id(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
}

type guests_directus_files_aggregated {
  group: JSON
  countAll: Int
  count: guests_directus_files_aggregated_count
  countDistinct: guests_directus_files_aggregated_count
  avg: guests_directus_files_aggregated_fields
  sum: guests_directus_files_aggregated_fields
  avgDistinct: guests_directus_files_aggregated_fields
  sumDistinct: guests_directus_files_aggregated_fields
  min: guests_directus_files_aggregated_fields
  max: guests_directus_files_aggregated_fields
}

type guests_directus_files_aggregated_count {
  id: Int
  guests_id: Int
  directus_files_id: Int
}

type guests_directus_files_aggregated_fields {
  id: Float
  guests_id: Float
}

type guests_directus_files_mutated {
  key: ID!
  event: EventEnum
  data: guests_directus_files
}

type guests_mutated {
  key: ID!
  event: EventEnum
  data: guests
}

type icons {
  id: ID!
  name: String
}

type icons_aggregated {
  group: JSON
  countAll: Int
  count: icons_aggregated_count
  countDistinct: icons_aggregated_count
  avg: icons_aggregated_fields
  sum: icons_aggregated_fields
  avgDistinct: icons_aggregated_fields
  sumDistinct: icons_aggregated_fields
  min: icons_aggregated_fields
  max: icons_aggregated_fields
}

type icons_aggregated_count {
  id: Int
  name: Int
}

type icons_aggregated_fields {
  id: Float
}

type icons_mutated {
  key: ID!
  event: EventEnum
  data: icons
}

type programs {
  id: ID!
  status: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_updated: Date
  date_updated_func: datetime_functions
  title: String
  description: String
  dateTime: Date
  dateTime_func: datetime_functions
  icon(filter: icons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): icons
  speaker(filter: speakers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): speakers
}

type programs_aggregated {
  group: JSON
  countAll: Int
  count: programs_aggregated_count
  countDistinct: programs_aggregated_count
  avg: programs_aggregated_fields
  sum: programs_aggregated_fields
  avgDistinct: programs_aggregated_fields
  sumDistinct: programs_aggregated_fields
  min: programs_aggregated_fields
  max: programs_aggregated_fields
}

type programs_aggregated_count {
  id: Int
  status: Int
  user_created: Int
  date_created: Int
  user_updated: Int
  date_updated: Int
  title: Int
  description: Int
  dateTime: Int
  icon: Int
  speaker: Int
}

type programs_aggregated_fields {
  icon: Float
}

type programs_mutated {
  key: ID!
  event: EventEnum
  data: programs
}

type rsvp {
  id: ID!
  status: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_updated: Date
  date_updated_func: datetime_functions
  title: String
  subtitle: String
  invitation: String
  accept_text: String
  decline_text: String
  deadline: Date
  deadline_func: datetime_functions
  logo(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  title_as_image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  backgroundImage(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
}

type rsvp_aggregated {
  group: JSON
  countAll: Int
  count: rsvp_aggregated_count
  countDistinct: rsvp_aggregated_count
  avg: rsvp_aggregated_fields
  sum: rsvp_aggregated_fields
  avgDistinct: rsvp_aggregated_fields
  sumDistinct: rsvp_aggregated_fields
  min: rsvp_aggregated_fields
  max: rsvp_aggregated_fields
}

type rsvp_aggregated_count {
  id: Int
  status: Int
  user_created: Int
  date_created: Int
  user_updated: Int
  date_updated: Int
  title: Int
  subtitle: Int
  invitation: Int
  accept_text: Int
  decline_text: Int
  deadline: Int
  logo: Int
  title_as_image: Int
  backgroundImage: Int
}

type rsvp_aggregated_fields {
  id: Float
}

type rsvp_mutated {
  key: ID!
  event: EventEnum
  data: rsvp
}

type sections {
  id: ID!
  status: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_updated: Date
  date_updated_func: datetime_functions
  type: String
  description: String
  image: String
  title: String
  section_id: String
}

type sections_aggregated {
  group: JSON
  countAll: Int
  count: sections_aggregated_count
  countDistinct: sections_aggregated_count
  avg: sections_aggregated_fields
  sum: sections_aggregated_fields
  avgDistinct: sections_aggregated_fields
  sumDistinct: sections_aggregated_fields
  min: sections_aggregated_fields
  max: sections_aggregated_fields
}

type sections_aggregated_count {
  id: Int
  status: Int
  user_created: Int
  date_created: Int
  user_updated: Int
  date_updated: Int
  type: Int
  description: Int
  image: Int
  title: Int
  section_id: Int
}

type sections_aggregated_fields {
  id: Float
}

type sections_mutated {
  key: ID!
  event: EventEnum
  data: sections
}

type speakers {
  id: ID!
  status: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_updated: Date
  date_updated_func: datetime_functions
  name: String
  bio: String
  image: String
}

type speakers_aggregated {
  group: JSON
  countAll: Int
  count: speakers_aggregated_count
  countDistinct: speakers_aggregated_count
}

type speakers_aggregated_count {
  id: Int
  status: Int
  user_created: Int
  date_created: Int
  user_updated: Int
  date_updated: Int
  name: Int
  bio: Int
  image: Int
}

type speakers_mutated {
  key: ID!
  event: EventEnum
  data: speakers
}

type time_functions {
  hour: Int
  minute: Int
  second: Int
}

""""""
type version_directus_sync_id_map {
  id: ID
  table: String
  sync_id: String
  local_id: String
  created_at: Date
}

""""""
type version_events {
  id: ID
  status: String
  user_created: JSON
  date_created: Date
  user_updated: JSON
  date_updated: Date
  title: String
  description: String
  location: String
  startDate: Date
  endDate: Date
  startTime: Date
  endTime: Date
  type: String
  maxAttendees: Int
  backgroundImage: String
  rsvp: JSON
  pageBanner: JSON
  sections: JSON
  programs: JSON
  guests: JSON
}

""""""
type version_events_guests {
  id: ID
  events_id: JSON
  guests_id: JSON
}

""""""
type version_events_programs {
  id: ID
  events_id: JSON
  programs_id: JSON
}

""""""
type version_events_sections {
  id: ID
  events_id: JSON
  sections_id: JSON
}

""""""
type version_guests {
  id: ID
  status: String
  user_created: JSON
  date_created: Date
  user_updated: JSON
  date_updated: Date
  first_name: String
  last_name: String
  email: String
  response: String
  type: String
  phone_number: String
  dietary_requirements: String
  message: String
  token: String
  attendance_status: String
  images: JSON
}

""""""
type version_guests_directus_files {
  id: ID
  guests_id: JSON
  directus_files_id: JSON
}

""""""
type version_icons {
  id: ID
  name: String
}

""""""
type version_programs {
  id: ID
  status: String
  user_created: JSON
  date_created: Date
  user_updated: JSON
  date_updated: Date
  title: String
  description: String
  dateTime: Date
  icon: JSON
  speaker: JSON
}

""""""
type version_rsvp {
  id: ID
  status: String
  user_created: JSON
  date_created: Date
  user_updated: JSON
  date_updated: Date
  title: String
  subtitle: String
  invitation: String
  accept_text: String
  decline_text: String
  deadline: Date
  logo: JSON
  title_as_image: JSON
  backgroundImage: JSON
}

""""""
type version_sections {
  id: ID
  status: String
  user_created: JSON
  date_created: Date
  user_updated: JSON
  date_updated: Date
  type: String
  description: String
  image: String
  title: String
  section_id: String
}

""""""
type version_speakers {
  id: ID
  status: String
  user_created: JSON
  date_created: Date
  user_updated: JSON
  date_updated: Date
  name: String
  bio: String
  image: String
}

input big_int_filter_operators {
  _eq: GraphQLBigInt
  _neq: GraphQLBigInt
  _in: [GraphQLBigInt]
  _nin: [GraphQLBigInt]
  _gt: GraphQLBigInt
  _gte: GraphQLBigInt
  _lt: GraphQLBigInt
  _lte: GraphQLBigInt
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLBigInt]
  _nbetween: [GraphQLBigInt]
}

input boolean_filter_operators {
  _eq: Boolean
  _neq: Boolean
  _null: Boolean
  _nnull: Boolean
}

input count_function_filter_operators {
  count: number_filter_operators
}

input create_directus_access_input {
  id: ID
  role: create_directus_roles_input
  user: create_directus_users_input
  policy: create_directus_policies_input
  sort: Int
}

input create_directus_files_input {
  id: ID
  storage: String!
  filename_disk: String
  filename_download: String!
  title: String
  type: String
  folder: create_directus_folders_input
  uploaded_by: create_directus_users_input
  created_on: Date
  modified_by: create_directus_users_input
  modified_on: Date
  charset: String
  filesize: GraphQLBigInt
  width: Int
  height: Int
  duration: Int
  embed: String
  description: String
  location: String
  tags: JSON
  metadata: JSON
  focal_point_x: Int
  focal_point_y: Int
  tus_id: String
  tus_data: JSON
  uploaded_on: Date
}

input create_directus_folders_input {
  id: ID
  name: String!
  parent: create_directus_folders_input
}

input create_directus_permissions_input {
  id: ID
  collection: String!
  action: String!
  permissions: JSON
  validation: JSON
  presets: JSON
  fields: [String]
  policy: create_directus_policies_input
}

input create_directus_policies_input {
  id: ID
  name: String!
  icon: String
  description: String
  ip_access: [String]

  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean!
  admin_access: Boolean!
  app_access: Boolean!
  permissions: [create_directus_permissions_input]
  users: [create_directus_access_input]
  roles: [create_directus_access_input]
}

input create_directus_roles_input {
  id: ID
  name: String!
  icon: String
  description: String
  parent: create_directus_roles_input
  children: [create_directus_roles_input]
  policies: [create_directus_access_input]
  users: [create_directus_users_input]
}

input create_directus_sync_id_map_input {
  id: ID
  table: String!
  sync_id: String!
  local_id: String!
  created_at: Date
}

input create_directus_users_input {
  id: ID
  first_name: String
  last_name: String
  email: String
  password: Hash
  location: String
  title: String
  description: String
  tags: JSON
  avatar: create_directus_files_input
  language: String
  tfa_secret: Hash
  status: String
  role: create_directus_roles_input
  token: Hash
  last_access: Date
  last_page: String
  provider: String
  external_identifier: String
  auth_data: JSON
  email_notifications: Boolean
  appearance: String
  theme_dark: String
  theme_light: String
  theme_light_overrides: JSON
  theme_dark_overrides: JSON
  policies: [create_directus_access_input]
}

input create_events_guests_input {
  id: ID
  events_id: create_events_input
  guests_id: create_guests_input
}

input create_events_input {
  id: ID
  status: String
  user_created: create_directus_users_input
  date_created: Date
  user_updated: create_directus_users_input
  date_updated: Date
  title: String
  description: String
  location: String
  startDate: Date
  endDate: Date
  startTime: Date
  endTime: Date
  type: String
  maxAttendees: Int
  backgroundImage: String
  rsvp: create_rsvp_input
  pageBanner: create_directus_files_input
  sections: [create_events_sections_input]
  programs: [create_events_programs_input]
  guests: [create_events_guests_input]
}

input create_events_programs_input {
  id: ID
  events_id: create_events_input
  programs_id: create_programs_input
}

input create_events_sections_input {
  id: ID
  events_id: create_events_input
  sections_id: create_sections_input
}

input create_guests_directus_files_input {
  id: ID
  guests_id: create_guests_input
  directus_files_id: create_directus_files_input
}

input create_guests_input {
  id: ID
  status: String
  user_created: create_directus_users_input
  date_created: Date
  user_updated: create_directus_users_input
  date_updated: Date
  first_name: String
  last_name: String
  email: String
  response: String
  type: String
  phone_number: String
  dietary_requirements: String
  message: String
  token: String
  attendance_status: String
  images: [create_guests_directus_files_input]
}

input create_icons_input {
  id: ID
  name: String
}

input create_programs_input {
  id: ID
  status: String
  user_created: create_directus_users_input
  date_created: Date
  user_updated: create_directus_users_input
  date_updated: Date
  title: String
  description: String
  dateTime: Date
  icon: create_icons_input
  speaker: create_speakers_input
}

input create_rsvp_input {
  id: ID
  status: String
  user_created: create_directus_users_input
  date_created: Date
  user_updated: create_directus_users_input
  date_updated: Date
  title: String
  subtitle: String
  invitation: String
  accept_text: String
  decline_text: String
  deadline: Date
  logo: create_directus_files_input
  title_as_image: create_directus_files_input
  backgroundImage: create_directus_files_input
}

input create_sections_input {
  id: ID
  status: String
  user_created: create_directus_users_input
  date_created: Date
  user_updated: create_directus_users_input
  date_updated: Date
  type: String
  description: String
  image: String
  title: String
  section_id: String
}

input create_speakers_input {
  id: ID
  status: String
  user_created: create_directus_users_input
  date_created: Date
  user_updated: create_directus_users_input
  date_updated: Date
  name: String
  bio: String
  image: String
}

input date_filter_operators {
  _eq: String
  _neq: String
  _gt: String
  _gte: String
  _lt: String
  _lte: String
  _null: Boolean
  _nnull: Boolean
  _in: [String]
  _nin: [String]
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

input date_function_filter_operators {
  year: number_filter_operators
  month: number_filter_operators
  week: number_filter_operators
  day: number_filter_operators
  weekday: number_filter_operators
}

input datetime_function_filter_operators {
  year: number_filter_operators
  month: number_filter_operators
  week: number_filter_operators
  day: number_filter_operators
  weekday: number_filter_operators
  hour: number_filter_operators
  minute: number_filter_operators
  second: number_filter_operators
}

input directus_access_filter {
  id: string_filter_operators
  role: directus_roles_filter
  user: directus_users_filter
  policy: directus_policies_filter
  sort: number_filter_operators
  _and: [directus_access_filter]
  _or: [directus_access_filter]
}

input directus_activity_filter {
  id: number_filter_operators
  action: string_filter_operators
  user: directus_users_filter
  timestamp: date_filter_operators
  timestamp_func: datetime_function_filter_operators
  ip: string_filter_operators
  user_agent: string_filter_operators
  collection: string_filter_operators
  item: string_filter_operators
  origin: string_filter_operators
  revisions: directus_revisions_filter
  revisions_func: count_function_filter_operators
  _and: [directus_activity_filter]
  _or: [directus_activity_filter]
}

input directus_dashboards_filter {
  id: string_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  note: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  color: string_filter_operators
  panels: directus_panels_filter
  panels_func: count_function_filter_operators
  _and: [directus_dashboards_filter]
  _or: [directus_dashboards_filter]
}

input directus_files_filter {
  id: string_filter_operators
  storage: string_filter_operators
  filename_disk: string_filter_operators
  filename_download: string_filter_operators
  title: string_filter_operators
  type: string_filter_operators
  folder: directus_folders_filter
  uploaded_by: directus_users_filter
  created_on: date_filter_operators
  created_on_func: datetime_function_filter_operators
  modified_by: directus_users_filter
  modified_on: date_filter_operators
  modified_on_func: datetime_function_filter_operators
  charset: string_filter_operators
  filesize: big_int_filter_operators
  width: number_filter_operators
  height: number_filter_operators
  duration: number_filter_operators
  embed: string_filter_operators
  description: string_filter_operators
  location: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  metadata: string_filter_operators
  metadata_func: count_function_filter_operators
  focal_point_x: number_filter_operators
  focal_point_y: number_filter_operators
  tus_id: string_filter_operators
  tus_data: string_filter_operators
  tus_data_func: count_function_filter_operators
  uploaded_on: date_filter_operators
  uploaded_on_func: datetime_function_filter_operators
  _and: [directus_files_filter]
  _or: [directus_files_filter]
}

input directus_flows_filter {
  id: string_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  color: string_filter_operators
  description: string_filter_operators
  status: string_filter_operators
  trigger: string_filter_operators
  accountability: string_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  operation: directus_operations_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  operations: directus_operations_filter
  operations_func: count_function_filter_operators
  _and: [directus_flows_filter]
  _or: [directus_flows_filter]
}

input directus_folders_filter {
  id: string_filter_operators
  name: string_filter_operators
  parent: directus_folders_filter
  _and: [directus_folders_filter]
  _or: [directus_folders_filter]
}

input directus_operations_filter {
  id: string_filter_operators
  name: string_filter_operators
  key: string_filter_operators
  type: string_filter_operators
  position_x: number_filter_operators
  position_y: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  resolve: directus_operations_filter
  reject: directus_operations_filter
  flow: directus_flows_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  _and: [directus_operations_filter]
  _or: [directus_operations_filter]
}

input directus_panels_filter {
  id: string_filter_operators
  dashboard: directus_dashboards_filter
  name: string_filter_operators
  icon: string_filter_operators
  color: string_filter_operators
  show_header: boolean_filter_operators
  note: string_filter_operators
  type: string_filter_operators
  position_x: number_filter_operators
  position_y: number_filter_operators
  width: number_filter_operators
  height: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  _and: [directus_panels_filter]
  _or: [directus_panels_filter]
}

input directus_permissions_filter {
  id: number_filter_operators
  collection: string_filter_operators
  action: string_filter_operators
  permissions: string_filter_operators
  permissions_func: count_function_filter_operators
  validation: string_filter_operators
  validation_func: count_function_filter_operators
  presets: string_filter_operators
  presets_func: count_function_filter_operators
  fields: string_filter_operators
  policy: directus_policies_filter
  _and: [directus_permissions_filter]
  _or: [directus_permissions_filter]
}

input directus_policies_filter {
  id: string_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  description: string_filter_operators
  ip_access: string_filter_operators
  enforce_tfa: boolean_filter_operators
  admin_access: boolean_filter_operators
  app_access: boolean_filter_operators
  permissions: directus_permissions_filter
  permissions_func: count_function_filter_operators
  users: directus_access_filter
  users_func: count_function_filter_operators
  roles: directus_access_filter
  roles_func: count_function_filter_operators
  _and: [directus_policies_filter]
  _or: [directus_policies_filter]
}

input directus_revisions_filter {
  id: number_filter_operators
  activity: directus_activity_filter
  collection: string_filter_operators
  item: string_filter_operators
  data: string_filter_operators
  data_func: count_function_filter_operators
  delta: string_filter_operators
  delta_func: count_function_filter_operators
  parent: directus_revisions_filter
  version: directus_versions_filter
  _and: [directus_revisions_filter]
  _or: [directus_revisions_filter]
}

input directus_roles_filter {
  id: string_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  description: string_filter_operators
  parent: directus_roles_filter
  children: directus_roles_filter
  children_func: count_function_filter_operators
  policies: directus_access_filter
  policies_func: count_function_filter_operators
  users: directus_users_filter
  users_func: count_function_filter_operators
  _and: [directus_roles_filter]
  _or: [directus_roles_filter]
}

input directus_sync_id_map_filter {
  id: number_filter_operators
  table: string_filter_operators
  sync_id: string_filter_operators
  local_id: string_filter_operators
  created_at: date_filter_operators
  created_at_func: datetime_function_filter_operators
  _and: [directus_sync_id_map_filter]
  _or: [directus_sync_id_map_filter]
}

input directus_users_filter {
  id: string_filter_operators
  first_name: string_filter_operators
  last_name: string_filter_operators
  email: string_filter_operators
  password: hash_filter_operators
  location: string_filter_operators
  title: string_filter_operators
  description: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  avatar: directus_files_filter
  language: string_filter_operators
  tfa_secret: hash_filter_operators
  status: string_filter_operators
  role: directus_roles_filter
  token: hash_filter_operators
  last_access: date_filter_operators
  last_access_func: datetime_function_filter_operators
  last_page: string_filter_operators
  provider: string_filter_operators
  external_identifier: string_filter_operators
  auth_data: string_filter_operators
  auth_data_func: count_function_filter_operators
  email_notifications: boolean_filter_operators
  appearance: string_filter_operators
  theme_dark: string_filter_operators
  theme_light: string_filter_operators
  theme_light_overrides: string_filter_operators
  theme_light_overrides_func: count_function_filter_operators
  theme_dark_overrides: string_filter_operators
  theme_dark_overrides_func: count_function_filter_operators
  policies: directus_access_filter
  policies_func: count_function_filter_operators
  _and: [directus_users_filter]
  _or: [directus_users_filter]
}

input directus_versions_filter {
  id: string_filter_operators
  key: string_filter_operators
  name: string_filter_operators
  collection: string_filter_operators
  item: string_filter_operators
  hash: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  delta: string_filter_operators
  delta_func: count_function_filter_operators
  _and: [directus_versions_filter]
  _or: [directus_versions_filter]
}

input events_filter {
  id: string_filter_operators
  status: string_filter_operators
  user_created: directus_users_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  title: string_filter_operators
  description: string_filter_operators
  location: string_filter_operators
  startDate: date_filter_operators
  startDate_func: date_function_filter_operators
  endDate: date_filter_operators
  endDate_func: date_function_filter_operators
  startTime: date_filter_operators
  startTime_func: time_function_filter_operators
  endTime: date_filter_operators
  endTime_func: time_function_filter_operators
  type: string_filter_operators
  maxAttendees: number_filter_operators
  backgroundImage: string_filter_operators
  rsvp: rsvp_filter
  pageBanner: directus_files_filter
  sections: events_sections_filter
  sections_func: count_function_filter_operators
  programs: events_programs_filter
  programs_func: count_function_filter_operators
  guests: events_guests_filter
  guests_func: count_function_filter_operators
  _and: [events_filter]
  _or: [events_filter]
}

input events_guests_filter {
  id: number_filter_operators
  events_id: events_filter
  guests_id: guests_filter
  _and: [events_guests_filter]
  _or: [events_guests_filter]
}

input events_programs_filter {
  id: number_filter_operators
  events_id: events_filter
  programs_id: programs_filter
  _and: [events_programs_filter]
  _or: [events_programs_filter]
}

input events_sections_filter {
  id: number_filter_operators
  events_id: events_filter
  sections_id: sections_filter
  _and: [events_sections_filter]
  _or: [events_sections_filter]
}

input guests_directus_files_filter {
  id: number_filter_operators
  guests_id: guests_filter
  directus_files_id: directus_files_filter
  _and: [guests_directus_files_filter]
  _or: [guests_directus_files_filter]
}

input guests_filter {
  id: number_filter_operators
  status: string_filter_operators
  user_created: directus_users_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  first_name: string_filter_operators
  last_name: string_filter_operators
  email: string_filter_operators
  response: string_filter_operators
  type: string_filter_operators
  phone_number: string_filter_operators
  dietary_requirements: string_filter_operators
  message: string_filter_operators
  token: string_filter_operators
  attendance_status: string_filter_operators
  images: guests_directus_files_filter
  images_func: count_function_filter_operators
  _and: [guests_filter]
  _or: [guests_filter]
}

input hash_filter_operators {
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input icons_filter {
  id: number_filter_operators
  name: string_filter_operators
  _and: [icons_filter]
  _or: [icons_filter]
}

input number_filter_operators {
  _eq: GraphQLStringOrFloat
  _neq: GraphQLStringOrFloat
  _in: [GraphQLStringOrFloat]
  _nin: [GraphQLStringOrFloat]
  _gt: GraphQLStringOrFloat
  _gte: GraphQLStringOrFloat
  _lt: GraphQLStringOrFloat
  _lte: GraphQLStringOrFloat
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

input programs_filter {
  id: string_filter_operators
  status: string_filter_operators
  user_created: directus_users_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  title: string_filter_operators
  description: string_filter_operators
  dateTime: date_filter_operators
  dateTime_func: datetime_function_filter_operators
  icon: icons_filter
  speaker: speakers_filter
  _and: [programs_filter]
  _or: [programs_filter]
}

input rsvp_filter {
  id: number_filter_operators
  status: string_filter_operators
  user_created: directus_users_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  title: string_filter_operators
  subtitle: string_filter_operators
  invitation: string_filter_operators
  accept_text: string_filter_operators
  decline_text: string_filter_operators
  deadline: date_filter_operators
  deadline_func: datetime_function_filter_operators
  logo: directus_files_filter
  title_as_image: directus_files_filter
  backgroundImage: directus_files_filter
  _and: [rsvp_filter]
  _or: [rsvp_filter]
}

input sections_filter {
  id: number_filter_operators
  status: string_filter_operators
  user_created: directus_users_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  type: string_filter_operators
  description: string_filter_operators
  image: string_filter_operators
  title: string_filter_operators
  section_id: string_filter_operators
  _and: [sections_filter]
  _or: [sections_filter]
}

input speakers_filter {
  id: string_filter_operators
  status: string_filter_operators
  user_created: directus_users_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  name: string_filter_operators
  bio: string_filter_operators
  image: string_filter_operators
  _and: [speakers_filter]
  _or: [speakers_filter]
}

input string_filter_operators {
  _eq: String
  _neq: String
  _contains: String
  _icontains: String
  _ncontains: String
  _starts_with: String
  _nstarts_with: String
  _istarts_with: String
  _nistarts_with: String
  _ends_with: String
  _nends_with: String
  _iends_with: String
  _niends_with: String
  _in: [String]
  _nin: [String]
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input time_function_filter_operators {
  hour: number_filter_operators
  minute: number_filter_operators
  second: number_filter_operators
}

input update_directus_access_input {
  id: ID
  role: update_directus_roles_input
  user: update_directus_users_input
  policy: update_directus_policies_input
  sort: Int
}

input update_directus_files_input {
  id: ID
  storage: String
  filename_disk: String
  filename_download: String
  title: String
  type: String
  folder: update_directus_folders_input
  uploaded_by: update_directus_users_input
  created_on: Date
  modified_by: update_directus_users_input
  modified_on: Date
  charset: String
  filesize: GraphQLBigInt
  width: Int
  height: Int
  duration: Int
  embed: String
  description: String
  location: String
  tags: JSON
  metadata: JSON
  focal_point_x: Int
  focal_point_y: Int
  tus_id: String
  tus_data: JSON
  uploaded_on: Date
}

input update_directus_folders_input {
  id: ID
  name: String
  parent: update_directus_folders_input
}

input update_directus_permissions_input {
  id: ID
  collection: String
  action: String
  permissions: JSON
  validation: JSON
  presets: JSON
  fields: [String]
  policy: update_directus_policies_input
}

input update_directus_policies_input {
  id: ID
  name: String
  icon: String
  description: String
  ip_access: [String]

  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean
  admin_access: Boolean
  app_access: Boolean
  permissions: [update_directus_permissions_input]
  users: [update_directus_access_input]
  roles: [update_directus_access_input]
}

input update_directus_roles_input {
  id: ID
  name: String
  icon: String
  description: String
  parent: update_directus_roles_input
  children: [update_directus_roles_input]
  policies: [update_directus_access_input]
  users: [update_directus_users_input]
}

input update_directus_sync_id_map_input {
  id: ID
  table: String
  sync_id: String
  local_id: String
  created_at: Date
}

input update_directus_users_input {
  id: ID
  first_name: String
  last_name: String
  email: String
  password: Hash
  location: String
  title: String
  description: String
  tags: JSON
  avatar: update_directus_files_input
  language: String
  tfa_secret: Hash
  status: String
  role: update_directus_roles_input
  token: Hash
  last_access: Date
  last_page: String
  provider: String
  external_identifier: String
  auth_data: JSON
  email_notifications: Boolean
  appearance: String
  theme_dark: String
  theme_light: String
  theme_light_overrides: JSON
  theme_dark_overrides: JSON
  policies: [update_directus_access_input]
}

input update_events_guests_input {
  id: ID
  events_id: update_events_input
  guests_id: update_guests_input
}

input update_events_input {
  id: ID
  status: String
  user_created: update_directus_users_input
  date_created: Date
  user_updated: update_directus_users_input
  date_updated: Date
  title: String
  description: String
  location: String
  startDate: Date
  endDate: Date
  startTime: Date
  endTime: Date
  type: String
  maxAttendees: Int
  backgroundImage: String
  rsvp: update_rsvp_input
  pageBanner: update_directus_files_input
  sections: [update_events_sections_input]
  programs: [update_events_programs_input]
  guests: [update_events_guests_input]
}

input update_events_programs_input {
  id: ID
  events_id: update_events_input
  programs_id: update_programs_input
}

input update_events_sections_input {
  id: ID
  events_id: update_events_input
  sections_id: update_sections_input
}

input update_guests_directus_files_input {
  id: ID
  guests_id: update_guests_input
  directus_files_id: update_directus_files_input
}

input update_guests_input {
  id: ID
  status: String
  user_created: update_directus_users_input
  date_created: Date
  user_updated: update_directus_users_input
  date_updated: Date
  first_name: String
  last_name: String
  email: String
  response: String
  type: String
  phone_number: String
  dietary_requirements: String
  message: String
  token: String
  attendance_status: String
  images: [update_guests_directus_files_input]
}

input update_icons_input {
  id: ID
  name: String
}

input update_programs_input {
  id: ID
  status: String
  user_created: update_directus_users_input
  date_created: Date
  user_updated: update_directus_users_input
  date_updated: Date
  title: String
  description: String
  dateTime: Date
  icon: update_icons_input
  speaker: update_speakers_input
}

input update_rsvp_input {
  id: ID
  status: String
  user_created: update_directus_users_input
  date_created: Date
  user_updated: update_directus_users_input
  date_updated: Date
  title: String
  subtitle: String
  invitation: String
  accept_text: String
  decline_text: String
  deadline: Date
  logo: update_directus_files_input
  title_as_image: update_directus_files_input
  backgroundImage: update_directus_files_input
}

input update_sections_input {
  id: ID
  status: String
  user_created: update_directus_users_input
  date_created: Date
  user_updated: update_directus_users_input
  date_updated: Date
  type: String
  description: String
  image: String
  title: String
  section_id: String
}

input update_speakers_input {
  id: ID
  status: String
  user_created: update_directus_users_input
  date_created: Date
  user_updated: update_directus_users_input
  date_updated: Date
  name: String
  bio: String
  image: String
}